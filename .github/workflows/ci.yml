name: Continuous Integration

on:
  # PR到main分支时触发
  pull_request:
    branches: [ main ]
  # 推送到任何分支时触发（除了main，main由deploy.yml处理）
  push:
    branches: [ main ]

jobs:
  # 代码检查和构建测试
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Make name
        run: |
          #!/bin/bash
          source build.sh
          echo "BUILD FOR MODULE"
          if [ "$Github_update_repo" = "" ]; then
            echo "YOU NEED TO SET Github_update_repo MODID MODNAME CURRENT_TIME_VERSIONCODE"
            echo "example: Aurora-Nasa-1/ModuleWebUI ModuleID ModuleName 240503"
            exit 0
          fi
          sed -i "s/20240503/${CURRENT_TIME_VERSIONCODE}/g" src/pages/status.js
          find src -name "status.js" -exec sed -i "s/Aurora-Nasa-1\/AMMF/${Github_update_repo}/g" {} \;
          find src -name "*.js" -exec sed -i "s/AMMF/${MODID}/g" {} \;
          sed -i "s/AMMF/${MODID}/g" index.html
          find src/assets/translations -name "*.json" -exec sed -i "s/AMMF/${MODNAME}/g" {} \;
          echo "已完成文本替换"
          
      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check build size
        run: |
          echo "Build completed successfully"
          ls -la dist/
          du -sh dist/

  # 代码质量检查
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check file structure
        run: |
          echo "Checking project structure..."
          find src -name "*.js" | head -10
          find src -name "*.css" | head -10

      - name: Validate Vite config
        run: |
          echo "Validating Vite configuration..."
          npx vite --version
          node -e "console.log('Vite config validation passed')"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-
          path: dist/
